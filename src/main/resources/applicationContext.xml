<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Spring的配置文件，这里主要配置和主业务逻辑有关的 -->
	
	<!-- 注册数据源 C3P0-->
	<bean id = "dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value = "${jdbc.driver}"></property>
		<property name="jdbcUrl" value = "${jdbc.url}"></property>
		<property name="user" value = "${jdbc.user}"></property>
		<property name="password" value = "${jdbc.password}"></property>
	</bean>
	<!-- 引入properties配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 注册组件组件扫描器 -->
	<context:component-scan base-package="com.atguigu">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 配置和Mybatis的整合 -->
	<bean id = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定Mybatis主配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定Mybatis映射文件的位置 -->
		<property name="mapperLocations" value = "classpath:mappers/*.xml"></property>
	</bean>
	
	<!-- 配置扫描器，将Mybatis接口的实现加入到IOC容器中 -->
	<bean class = "org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="com.atguigu.dao"></property>
	</bean>
	
	<bean id = "sqlSessionTemplate" class = "org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name = "sqlSessionFactory" ref = "sqlSessionFactory"></constructor-arg>
		<constructor-arg name = "executorType" value = "BATCH"></constructor-arg>
	</bean>
	
	<!-- 开启基于注解的事务，使用xml配置形式的事务（主要使用的是配置式 ）-->
	<!-- 注册输入管理 -->
	<bean id = "transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref = "dataSource"></property>
	</bean>
	
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* *..service..*.*(..))" id="txPoint"/>
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id = "txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开始的所有方法 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
</beans>
